getprop("ro.product.device") == "alioth" || abort("E3004: This package is for \"alioth\" devices; this is a \"" + getprop("ro.product.device") + "\".");


ui_print("Extracting boot...");
package_extract_file("boot.img", "/dev/block/bootdevice/by-name/boot_a");
package_extract_file("boot.img", "/dev/block/bootdevice/by-name/boot_b");


# ---- radio update tasks ----

ui_print("Patching firmware images...");
package_extract_file("firmware-update/dsp.img", "/dev/block/bootdevice/by-name/dsp_a");
package_extract_file("firmware-update/dsp.img", "/dev/block/bootdevice/by-name/dsp_b");
package_extract_file("firmware-update/xbl_config.img", "/dev/block/bootdevice/by-name/xbl_config_a");
package_extract_file("firmware-update/xbl_config.img", "/dev/block/bootdevice/by-name/xbl_config_b");
package_extract_file("firmware-update/modem.img", "/dev/block/bootdevice/by-name/modem_a");
package_extract_file("firmware-update/modem.img", "/dev/block/bootdevice/by-name/modem_b");
package_extract_file("firmware-update/tz.img", "/dev/block/bootdevice/by-name/tz_a");
package_extract_file("firmware-update/tz.img", "/dev/block/bootdevice/by-name/tz_b");
package_extract_file("firmware-update/bluetooth.img", "/dev/block/bootdevice/by-name/bluetooth_a");
package_extract_file("firmware-update/bluetooth.img", "/dev/block/bootdevice/by-name/bluetooth_b");
package_extract_file("firmware-update/abl.img", "/dev/block/bootdevice/by-name/abl_a");
package_extract_file("firmware-update/abl.img", "/dev/block/bootdevice/by-name/abl_b");
package_extract_file("firmware-update/featenabler.img", "/dev/block/bootdevice/by-name/featenabler_a");
package_extract_file("firmware-update/featenabler.img", "/dev/block/bootdevice/by-name/featenabler_b");
package_extract_file("firmware-update/keymaster.img", "/dev/block/bootdevice/by-name/keymaster_a");
package_extract_file("firmware-update/keymaster.img", "/dev/block/bootdevice/by-name/keymaster_b");
package_extract_file("firmware-update/uefisecapp.img", "/dev/block/bootdevice/by-name/uefisecapp_a");
package_extract_file("firmware-update/uefisecapp.img", "/dev/block/bootdevice/by-name/uefisecapp_b");
package_extract_file("firmware-update/qupfw.img", "/dev/block/bootdevice/by-name/qupfw_a");
package_extract_file("firmware-update/qupfw.img", "/dev/block/bootdevice/by-name/qupfw_b");
package_extract_file("firmware-update/xbl.img", "/dev/block/bootdevice/by-name/xbl_a");
package_extract_file("firmware-update/xbl.img", "/dev/block/bootdevice/by-name/xbl_b");
package_extract_file("firmware-update/cmnlib.img", "/dev/block/bootdevice/by-name/cmnlib_a");
package_extract_file("firmware-update/cmnlib.img", "/dev/block/bootdevice/by-name/cmnlib_b");
package_extract_file("firmware-update/cmnlib64.img", "/dev/block/bootdevice/by-name/cmnlib64_a");
package_extract_file("firmware-update/cmnlib64.img", "/dev/block/bootdevice/by-name/cmnlib64_b");
package_extract_file("firmware-update/devcfg.img", "/dev/block/bootdevice/by-name/devcfg_a");
package_extract_file("firmware-update/devcfg.img", "/dev/block/bootdevice/by-name/devcfg_b");
package_extract_file("firmware-update/hyp.img", "/dev/block/bootdevice/by-name/hyp_a");
package_extract_file("firmware-update/hyp.img", "/dev/block/bootdevice/by-name/hyp_b");
package_extract_file("firmware-update/imagefv.img", "/dev/block/bootdevice/by-name/imagefv_a");
package_extract_file("firmware-update/imagefv.img", "/dev/block/bootdevice/by-name/imagefv_b");
package_extract_file("firmware-update/aop.img", "/dev/block/bootdevice/by-name/aop_a");
package_extract_file("firmware-update/aop.img", "/dev/block/bootdevice/by-name/aop_b");

# ---- radio update tasks 2 ----

ui_print("Patching vbmeta dtbo logo binimages...");
package_extract_file("firmware-update/dtbo.img", "/dev/block/bootdevice/by-name/dtbo_a");
package_extract_file("firmware-update/dtbo.img", "/dev/block/bootdevice/by-name/dtbo_b");
package_extract_file("firmware-update/vbmeta.img", "/dev/block/bootdevice/by-name/vbmeta_a");
package_extract_file("firmware-update/vbmeta.img", "/dev/block/bootdevice/by-name/vbmeta_b");
package_extract_file("firmware-update/vbmeta_system.img", "/dev/block/bootdevice/by-name/vbmeta_system_a");
package_extract_file("firmware-update/vbmeta_system.img", "/dev/block/bootdevice/by-name/vbmeta_system_b");



# --- Start patching dynamic partitions ---

# Update dynamic partition metadata

assert(update_dynamic_partitions(package_extract_file("dynamic_partitions_op_list")));

# Patch partition system

show_progress(0.600000, 250);

ui_print("Patching system image unconditionally...");
block_image_update(map_partition("system_a"), package_extract_file("system.transfer.list"), "system.new.dat.br", "system.patch.dat") ||
  abort("E1001: Failed to update system image.");

# Patch partition vendor

ui_print("Patching vendor image unconditionally...");
block_image_update(map_partition("vendor_a"), package_extract_file("vendor.transfer.list"), "vendor.new.dat.br", "vendor.patch.dat") ||
  abort("E2001: Failed to update vendor image.");

# Patch partition product

ui_print("Patching product image unconditionally...");
block_image_update(map_partition("product_a"), package_extract_file("product.transfer.list"), "product.new.dat.br", "product.patch.dat") ||
  abort("E2001: Failed to update product image.");

# Patch partition odm

ui_print("Patching odm image unconditionally...");
block_image_update(map_partition("odm_a"), package_extract_file("odm.transfer.list"), "odm.new.dat.br", "odm.patch.dat") ||
  abort("E2001: Failed to update odm image.");

# Patch partition system_ext

ui_print("Patching system_ext image unconditionally...");
block_image_update(map_partition("system_ext_a"), package_extract_file("system_ext.transfer.list"), "system_ext.new.dat.br", "system_ext.patch.dat") ||
  abort("E2001: Failed to update system_ext image.");


# Credits
ui_print("Credits:");
ui_print("AliothSC Github");
ui_print("By FabriSC");


# --- End patching dynamic partitions ---

run_program("/system/bin/bootctl", "set-active-boot-slot", "0");


set_progress(0.900000);
show_progress(0.100000, 2);
set_progress(1.000000);
